type Country {
    code: ID!
    name: String!
    continent: String!
    region: String!
    surfaceArea: Float!
    population: Int!
    localName: String!
    governmentForm: String!
}

type City {
    id: ID!
    name: String!
    district: String!
    population: Int!
    country: Country!
}

type CountryLanguage {
    countryCode: String!
    language: String!
    isOfficial: Boolean!
    percentage: Float!
}

type Query {
    getCountry(code: ID!): Country
    countriesContinent(continent: String!): [Country!]!
    getCity(id: ID!): City
    getCountryLanguage( countryCode: String! language: String!): CountryLanguage!
}


type Mutation {
    createCountry(code: String!, name: String!, continent: String!, region: String!, surfaceArea: Float!, population: Int!,
        localName: String!, governmentForm: String!, code2: String!): Country
}
